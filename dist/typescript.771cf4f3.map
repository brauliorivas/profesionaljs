{"version":3,"sources":["ejercicios/typescript/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAQ,GAAR,CAAY,kBAAZ;AAEA;AACA;AACA;AAEA;AAEA;AAEA,IAAI,QAAiB,IAArB;AACA,QAAQ,KAAR;AAEA,IAAI,MAAM,CAAV;AACA,IAAI,YAAoB,EAAxB;AACA,IAAI,cAAsB,GAA1B;AACA,IAAI,YAAY,YAAY,WAA5B;AAEA;AACA,IAAI,SAAiB,SAArB;AACA,IAAI,SAAiB,cAAY,MAAjC;AAEA;AACA,IAAI,SAAmB,EAAvB;AACA,SAAS,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAAT;AACA;AAEA,IAAI,mBAA6C,EAAjD;AACA,iBAAiB,IAAjB,CAAsB,SAAtB;AACA,iBAAiB,IAAjB,CAAsB,IAAtB;AAEA;AAEA,IAAK,KAAL;AAAA,CAAA,UAAK,KAAL,EAAU;AACN,UAAA,MAAA,IAAA,MAAA;AACA,UAAA,OAAA,IAAA,OAAA;AACA,UAAA,MAAA,IAAA,UAAA;AACH,CAJD,EAAK,UAAA,QAAK,EAAL,CAAL;AAMA,IAAI,gBAAuB,MAAM,IAAjC;AACA,QAAQ,GAAR,CAAY,6BAA2B,aAAvC;AAGA;AACA,IAAI,UAAe,OAAnB;AACA,UAAU,EAAE,MAAM,UAAR,EAAV;AAEA;AAEA,IAAI,aAAqB,EAAE,MAAM,UAAR,EAAzB;AAEA;AAEA,SAAS,GAAT,CAAa,CAAb,EAAwB,CAAxB,EAAiC;AAC7B,WAAO,IAAI,CAAX;AACH;AAED,IAAM,MAAM,IAAI,CAAJ,EAAO,CAAP,CAAZ;AAEA,SAAS,WAAT,CAAsB,CAAtB,EAA+B;AAC3B,WAAO,UAAS,CAAT,EAAkB;AACrB,eAAO,IAAI,CAAX;AACH,KAFD;AAGH;AAED,IAAM,UAAU,YAAY,CAAZ,CAAhB;AACA,IAAM,YAAY,QAAQ,CAAR,CAAlB;AAEA,SAAS,QAAT,CAAkB,SAAlB,EAAqC,QAArC,EAA+D;AAA1B,QAAA,aAAA,KAAA,CAAA,EAAA;AAAA,mBAAA,OAAA;AAA0B;AAC/D;AACI,WAAU,YAAS,GAAT,GAAa,QAAvB;AACH;AAED,IAAM,UAAU,SAAS,QAAT,CAAhB;AACA,QAAQ,GAAR,CAAY,OAAZ;AAUA,IAAI,OAAmB;AACnB,WAAO,CADY;AAEnB,UAAM;AACN;AAHmB,CAAvB;AAMA,SAAS,IAAT,CAAc,CAAd,EAA2B;AACvB,WAAO,EAAE,KAAF,GAAU,EAAE,IAAnB;AACH;AAED,IAAM,WAAW,KAAK,IAAL,CAAjB;AACA,QAAQ,GAAR,CAAY,QAAZ;AAEA,KAAK,QAAL,GAAgB,YAAA;AACZ,WAAO,KAAK,KAAL,GAAa,mBAAiB,KAAK,KAAnC,GAA6C,eAApD;AACH,CAFD;AAIA,QAAQ,GAAR,CAAY,KAAK,QAAL,EAAZ","file":"typescript.771cf4f3.map","sourceRoot":"..","sourcesContent":["console.log('Hello TypeScript');\n\n// function add(a: number, b: number) {\n//     return a + b;\n// }\n\n// const sum = add(2, 3);\n\n// Tipos\n\nlet muted: boolean = true;\nmuted = false;\n\nlet age = 6\nlet numerador: number = 42;\nlet denominador: number = age;\nlet resultado = numerador / denominador;\n\n// String\nlet nombre: string = 'Braulio';\nlet saludo: string = `Me llamo ${nombre}`;      \n\n// Arreglos\nlet people: string[] = [];\npeople = ['Isabel', 'Nicole', 'Raul'];\n//people.push(\"9000\")\n\nlet peopleAndNumbers: Array< string | number > = [];\npeopleAndNumbers.push('Braulio');\npeopleAndNumbers.push(9001);\n\n// Enums\n\nenum Color {\n    Rojo = \"Rojo\", \n    Verde = \"Verde\", \n    Azul = \"Amarillo\",\n}\n\nlet colorFavorito: Color = Color.Rojo;\nconsole.log(`Mi color favorito es el ${colorFavorito}`);\n\n\n// Any \nlet comodin: any = \"Joker\";\ncomodin = { type: \"Wildcard\"}\n\n// Object\n\nlet someObject: object = { type: \"Wildcard\"};\n\n// Funciones\n\nfunction add(a: number, b: number): number { //Retorna un numero\n    return a + b;\n}\n\nconst sum = add(4, 6);\n\nfunction createAdder (a: number): (number) => number { // Le indicamos que regresa una función y esa función le pasamos un parametro y luego regresa un numero\n    return function(b: number) {\n        return a + b;\n    }\n}\n\nconst addFour = createAdder(4);\nconst fourPlus6 = addFour(6)\n\nfunction fullName(firstName: string, lastName: string = 'Smith'): string { //Valor por defecto o le ponemos uno nuestro\n// lastName ?: string, admite un valor o undefined, no hay valor por defecto, osea puede ser que haya y si no, no regresa nada\n    return `${firstName} ${lastName}`;\n}\n\nconst braulio = fullName(\"Agente\");\nconsole.log(braulio)\n\n//Interfaces\n\ninterface Rectangulo {\n    ancho: number\n    alto: number\n    color?: Color // Opcional que tenga o no color\n}\n\nlet rect: Rectangulo = {\n    ancho: 4,\n    alto: 6,\n    // color: Color.Rojo,\n}\n\nfunction area(r: Rectangulo): number {\n    return r.ancho * r.alto;\n}\n\nconst areaRect = area(rect);\nconsole.log(areaRect);\n\nrect.toString = function () {\n    return this.color ? `Un rectangulo ${this.color}` : `Un rectangulo`;\n}\n\nconsole.log(rect.toString())"]}