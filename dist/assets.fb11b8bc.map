{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","status","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","mute","unmute","AutoPlay","AutoPause","constructor","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isIntersecting","isVisible","visibilityState","video","querySelector","button","getElementById","onclick","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":"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","file":"assets.fb11b8bc.map","sourceRoot":"..","sourcesContent":["function MediaPlayer(config, status) {\n    this.media = config.el;\n    this.status = status;\n    this.plugins = config.plugins || [];\n\n    this._initPlugins();\n}\n\nMediaPlayer.prototype._initPlugins = function () {\n    const player = {\n        play: () => this.play(),\n        pause: () => this.pause(),\n        media: this.media,\n        get muted() {\n            return this.media.muted;\n        },\n        set muted(value) {\n            this.media.muted = value;\n        }\n    }\n    this.plugins.forEach(plugin => {\n        plugin.run(player);\n    })\n}\n\nMediaPlayer.prototype.play = function() {\n    this.media.play();\n    this.status = \"play\";\n}\n\nMediaPlayer.prototype.pause = function() {\n    this.media.pause();\n    this.status = \"pause\";\n}\n\nMediaPlayer.prototype.mute = function() {\n    this.media.muted = true;\n}\n\nMediaPlayer.prototype.unmute = function() {\n    this.media.muted = false;\n}\n\nexport default MediaPlayer;","function AutoPlay() {};\n\nAutoPlay.prototype.run = function (player) {\n    if (!player.muted) {\n        player.muted = true;\n    }\n    player.play();\n    player.status = 'play'\n}\n\nexport default AutoPlay;","class AutoPause {\n    constructor() {\n        this.threshold = 0.25;\n        this.handleIntersection = this.handleIntersection.bind(this);\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n    }\n    run(player) {\n        this.player = player;\n        const observer = new IntersectionObserver(this.handleIntersection, {\n            threshold: this.threshold\n        })\n\n        observer.observe(this.player.media);\n\n        document.addEventListener('visibilitychange', this.handleVisibilityChange)\n    }\n\n    handleIntersection(entries) {\n        const entry = entries[0];\n        entry.isIntersecting ? this.player.play() : this.player.pause();\n    }\n\n    handleVisibilityChange() {\n        const isVisible = document.visibilityState === 'visible';\n\n        if (isVisible) {\n            this.player.play()\n        } else {\n            this.player.pause()\n        }\n    }\n}\n\nexport default AutoPause;","import MediaPlayer from './MediaPlayer.js'\nimport AutoPlay from './plugins/AutoPlay.js'\nimport AutoPause from './plugins/AutoPause.js'\n\nconst video = document.querySelector('video');\nconst button = document.getElementById('playpause-button');\nconst mute = document.getElementById('mute-button');\n\nconst player = new MediaPlayer({el: video, \n    plugins: [new AutoPlay(), new AutoPause()]\n},'pause');\n\nbutton.onclick = () => player.status == \"pause\" ? player.play() : player.pause();\n\nmute.onclick = () => player.media.muted == true ? player.unmute() : player.mute();\n\nif ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('../sw.js').catch(error => {\n        console.log(error.message)\n    });\n}"]}